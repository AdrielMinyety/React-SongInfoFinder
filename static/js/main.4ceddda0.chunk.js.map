{"version":3,"sources":["components/Formulario.jsx","components/LetraCancion.jsx","components/InfoSong.jsx","components/Spinner.jsx","App.js","serviceWorker.js","index.js"],"names":["Formulario","setBusqueda","useState","cancion","setCancion","artista","setArtista","buscar","setBuscar","useEffect","className","style","onSubmit","e","preventDefault","type","onChange","target","value","placeholder","LetraCancion","letras","InfoSong","informacion","Object","keys","length","strArtistThumb","strArtist","strBiographyES","strFacebook","strTwitter","strLastFMChart","strWebsite","src","alt","href","rel","Spinner","App","busqueda","error","setError","loading","setLoading","setLetras","setInformacion","a","consultaLyrics","consultaBio","Promise","all","axios","catch","letrasResp","informacionResp","data","lyrics","artists","consultarAPI","onClick","lyricsComponent","document","querySelector","console","log","scrollIntoView","behavior","width","role","data-dismiss","aria-label","aria-hidden","id","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","message"],"mappings":"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","file":"static/js/main.4ceddda0.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\r\n\r\nexport default function Formulario({setBusqueda}) {\r\n\r\n    // definir estado\r\n    // set state\r\n    const [cancion, setCancion] = useState('');\r\n    const [artista, setArtista] = useState('');\r\n    const [buscar, setBuscar] = useState(false);\r\n\r\n    // actualizar state\r\n    // update state\r\n    const handleChangeCancion = (e) => {\r\n        setCancion(e.target.value);\r\n    }\r\n    const handleChangeArtiste = (e) => {\r\n        setArtista(e.target.value);\r\n    }\r\n\r\n    // aparecer o no, el btn de buscar si hay datos\r\n    // apear or not, the subtmit's btn if there is data\r\n    useEffect(() => {\r\n        if(artista !== '' && cancion !== '') {\r\n            setBuscar(true);\r\n        }else {\r\n            setBuscar(false);\r\n        }\r\n    }, [artista, cancion])\r\n\r\n    // enviar datos al componente principal, mediante props\r\n    // submit data to the main component, throw props\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(artista === '' || cancion === '') return;\r\n        setBusqueda({\r\n            artista, cancion\r\n        })\r\n    }\r\n\r\n    return (\r\n        <form \r\n            className=\"mx-auto\" \r\n            style={{'width': '80%'}}\r\n            onSubmit={handleSubmit}>\r\n            \r\n            <div className=\"form-group\">\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"form-control\"\r\n                    onChange={handleChangeCancion}\r\n                    value={cancion} \r\n                    placeholder=\"Nombre de la canciÃ³n\"/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"form-control\"\r\n                    onChange={handleChangeArtiste}\r\n                    value={artista} \r\n                    placeholder=\"Nombre del artista\"/>\r\n            </div>\r\n            {(buscar)?\r\n                <button className=\"btn btn-secondary btn-block font-weight-bold\" type=\"submit\">Buscar</button>\r\n            :\r\n                null\r\n            }\r\n        </form>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function LetraCancion({letras}) {\r\n\r\n    // si no hay letras, retornar null\r\n    // if there is not lyrics, return null\r\n    if(letras === '') return null;\r\n\r\n    return (\r\n        <div className=\"card bg-dark text-light shadow-md p-3\">\r\n            <h2 className=\"card-title font-weight-bold\">Letras</h2>\r\n            <p className=\"letras font-weight-bold text-secondary\">{letras}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function InfoSong({informacion}) {\r\n\r\n    // si no hay letras, retornar null\r\n    // if there is not lyrics, return null\r\n    if(Object.keys(informacion).length === 0) return null;\r\n\r\n    const { strArtistThumb, strArtist, strBiographyES, strFacebook, strTwitter, strLastFMChart, strWebsite } = informacion;\r\n    \r\n    return (\r\n        <div className=\"card shadow-md\">\r\n            <img className=\"w-100\" src={strArtistThumb} alt=\"artistaImg\"/>\r\n            <h2 className=\"card-title font-weight-bold my-3\">{strArtist}</h2>\r\n            <div className=\"card-body\">\r\n                <p className=\"letras font-weight-bold text-secondary\">{strBiographyES}</p>\r\n            </div>\r\n            <p className=\"card-text enlaces\">\r\n                    <a className=\"mr-2\" href={`https://${strFacebook}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <i className=\"fab fa-facebook\"></i>\r\n                    </a>\r\n                    <a className=\"mr-2\" href={`https://${strTwitter}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <i className=\"fab fa-twitter\"></i>\r\n                    </a>\r\n                    <a className=\"mr-2\" href={`https://${strLastFMChart}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <i className=\"fab fa-lastfm\"></i>\r\n                    </a>\r\n                    <a className=\"\" href={`https://${strWebsite}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <i className=\"far fa-user\"></i>\r\n                    </a>\r\n                </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Spinner() {\r\n    return (\r\n        <div className=\"spinner\">\r\n            <div className=\"rect1\"></div>\r\n            <div className=\"rect2\"></div>\r\n            <div className=\"rect3\"></div>\r\n            <div className=\"rect4\"></div>\r\n            <div className=\"rect5\"></div>\r\n        </div>    \r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Formulario from './components/Formulario';\nimport axios from 'axios';\nimport LetraCancion from './components/LetraCancion';\nimport InfoSong from './components/InfoSong';\nimport Spinner from './components/Spinner';\n\nfunction App() {\n\n  // establecer estado\n  // set state\n  const [busqueda, setBusqueda] = useState({\n    cancion : '',\n    artista : '',\n  });\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [letras, setLetras] = useState('');\n  const [informacion, setInformacion] = useState('');\n\n  // detectar cambios\n  // detect changes\n  useEffect(() => {\n\n    if(busqueda.cancion === '' || busqueda.artista === '' ) return;\n\n    const consultarAPI = async () => {\n      // destructuring\n      const {artista, cancion} = busqueda;\n      \n      // Cargando\n      // loading\n      setLoading(true);\n\n      // consultas\n      const consultaLyrics = `https://api.lyrics.ovh/v1/${artista}/${cancion}`;\n      const consultaBio = `https://www.theaudiodb.com/api/v1/json/1/search.php?s=${artista}`;\n\n      // obtener respuesta\n      // get response\n      const [letrasResp, informacionResp] = await Promise.all([\n        axios(consultaLyrics).catch(error => { return null; }),\n        axios(consultaBio).catch(error => { return null; })\n      ])\n      // si no hay resultados, mostrar mensaje\n      // if there is not results, show message\n      if (letrasResp === null || typeof informacionResp !== 'object') {\n        setError(true);\n        setLoading(false);\n        return null;\n      };\n      // Parar spinner\n      // Stop spinner\n      setLoading(false);\n      setError(false);\n      // Si todo esta bien, guardar en el state\n      // if all is fine, save in the state\n      setLetras(letrasResp.data.lyrics);\n      setInformacion(informacionResp.data.artists[0]);\n    }\n    consultarAPI();\n    \n  }, [busqueda]);\n\n  // clickear btn abajo\n  // click btn down\n  const handleClick = () => {\n    // si no hay letras, no hacer nada\n    // if there is not lyrics, do not anything\n    if (letras === '') return null;\n    // mover pantalla hasta las letras\n    // move the screen to the lyrics\n    const lyricsComponent = document.querySelector(\"#letraCancion\");\n    console.log(lyricsComponent.scrollIntoView({behavior : 'smooth'}));\n  }\n\n  return (\n    <div className=\"App\">\n      <div \n        onClick={handleClick} \n        className=\"moveDown fixed-top rounded-pill bg-white shadow m-2 p-1\" \n        style={{width : '2rem'}}>\n          <i className=\"fas fa-sort-down\"></i>\n      </div>\n\n      <div className=\"container-fluid p-5 bg-dark text-white shadow\">        \n        <h1 className=\"mb-5 text-center\">Tu CanciÃ³n</h1>\n        <Formulario\n          setBusqueda={setBusqueda}\n        />\n      </div>\n      <div className=\"container my-5\">\n\n        {/* Si hay un error, mostrar mensaje */}\n        {/* If there is an error, show message */}\n        { error === true\n        ?\n          <div className=\"w-75 mx-auto alert alert-warning alert-dismissible fade show mt-5\" role=\"alert\">\n            <strong>Ups!</strong> No se pudo encontrar lo que esta buscando... trata con otra canciÃ³n :>\n            <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n        :\n          null\n        }\n\n        {(loading)?\n          <Spinner/>\n        :\n          (!error) ?\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <InfoSong\n                  informacion={informacion}\n                  />\n              </div>\n              <div id=\"letraCancion\" className=\"col-md-6\">\n                <LetraCancion\n                  letras={letras}\n                  />\n              </div>\n            </div>\n          : null\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}